#+Title: Mnemoboid

** In a nutshell

Look at an org-mode outline as a 3D sky-cube from the inside. Mnemoboid builds a
bridge between an org-mode outline in Emacs and its 3D representation by the way
of Three.js  in modern browsers. A  cube naturally comprises six  sides and each
headline is  displayed on one  of the sides. With  more than six  headlines, the
sides  are  divided  into  tiles  of  size 1x1,  2x2,  or  3x3.  Each  headline,
subheadline, paragraph  and list item  of the outline  can be complemented  by a
drawer which holds additional information, i.e., the mnemonic device.

Have your memory palace displayed in front of your eyes ... with ease!

** What is a Mnemoboid?

Mnemoboid is a  contraction of the words Mnemonic and  Cuboid. A mnemonic device
aids information  retention. It  helps to  remember. A cuboid  is a  3D-cube. It
helps  to visualise  information  by  realising the  concept  of a  standardised
hierarchical memory palace.

** Origin

The  idea of  using an  artificial room  for memorisation  may be  attributed to
Gregor von Feinaigle  (cf. [[https://books.google.de/books?id=i6LMvgEACAAJ&dq=ernest+wood+memory+and+mind+training&hl=de&sa=X&ved=2ahUKEwjn06ykzqfqAhVNR5oKHU8tAY0Q6AEwAHoECAAQAQ][Mind and Memory and Training]]  by Ernest Wood). Dominic
O'Brien refers to it as Roman Room method.

** Pros and Cons

The main  advantage of this software  is the ease  with which an outline  can be
visualized as a three-dimensional structure. Plus adding mnemonic drawers forces
the  author  to  connect  with  the source  material  and  to  craft  meaningful
connections.

The  main disadvantage  is that  the 3D-rendition  is extremely  simplistic, and
lacks for example all the finesse of modern 3D-games. That is of course a design
choice, in that drafting the org-line comes first and visualizing the outline is
meant for the recall and retention stage of the whole note-taking process.

** Installation

*** Doom Emacs

- Clone files into =~/.doom.d= with

=git clone https://github.com/RetepRennelk/mnemoboid.git ~/.doom.d=

- Configure Emacs by adding the following to =config.el=

#+BEGIN_SRC emacs-lisp
(use-package! mnemoboid
  :load-path "~/.doom.d/mnemoboid")
#+END_SRC

+ Finally update Doom Emacs with =doom sync=

** Basic Usage

Create an org-mode file and from within its buffer call =mnemoboid-browse=. This
will open the system's default browser to a website hosted from within Emacs.
Please note that for the sake of forcing recall the font for the browser is [[https://sansforgetica.rmit][Sans
Forgetica]].

[[file:doc/gif/basic-usage.gif]]

Within the browser hold  the left mouse button and use the mouse  to look at all
sides. Use the mouse wheel to zoom in and out. Alternatively use the keyboard to
look at all sides  (A=left / W=forward / D=right / S=backward  / Q=down / E=up).
This will run  a tween animation moving  the camera to the  selected target from
the current  location. The Space key  will zoom forwards and  backwards from the
current position.

** Advanced Usage 1 - Adding Mnemonic Drawers

To   each   headline   a   =mnemonic=-drawer    can   be   added   by   invoking
=mnemoboid-insert-drawer=. The  drawer can  contain paragraphs,  unordered lists
and images. If  a mnemonic-drawer is present in the  org-outline, the respective
side (and later tile) in the browser will be split vertically in two halves. The
headline appears in the upper halve, the mnemonic helper in the lower halve.

[[file:doc/gif/advanced-usage-1.gif]]

** Advanced Usage 2 - Adding Mnemonic Drawers with Images

First off, apologies if the artwork hurts the  eyes. Put a link to an image file
into the mnemonic-drawer and the image will be shown in the mnemonic tile to the
left of the mnemonic text. Multiple images will share a tile.

[[file:doc/gif/advanced-usage-2.gif]]

** Advanced Usage 3 - A hierarchy of cubes

Subheadlines under headlines are represented as tiny white boxes on a tile. They
function  just like  portals, and  they  can be  touched or  clicked. The  ideal
solution would have  been to dolly into these boxes.  The CSS3DRenderer does not
allow  for that.  Instead it  is  the user's  responsibility to  keep the  track
mapping.

[[file:doc/gif/advanced-usage-3.gif]]

** Roadmap

- [ ] Add documentation
- [ ] Fix known bugs
